0:00:00.000,0:00:07.050
Hallo, in dieser Aufgabe üben wir unification,
oder Vereinigung, wenn ihr wollt, aber da wir

0:00:07.050,0:00:11.700
diese Begriffe sowieso meistens auf Englisch
haben, wie in der Vorlesung, werde ich auch hier

0:00:11.700,0:00:20.190
die englischen Begriffe hauptsächlich benutzen,
also unification und unifier etc. Also für diese

0:00:20.190,0:00:24.990
Aufgabe haben wir sechs Paare von Termen und
für jedes dieser Paare sollen wir schauen,

0:00:24.990,0:00:32.460
ob die Terme unifizierbar sind und wenn ja,
geben wir den most general unifier. Ein unifier

0:00:32.460,0:00:38.940
ist ein Set von Substitutionen, das angewandt
auf alle Terme, die wir unifizieren wollen,

0:00:38.940,0:00:43.920
dazu führt, dass die Terme identisch sind.
Wenn die Terme, die wir uns anschauen,

0:00:43.920,0:00:48.990
nicht unifizierbar sind, dann sollen wir kurz
erklären, warum das der Fall ist. Einfach nur

0:00:48.990,0:00:53.940
zu sagen wir finden keinen unifier, deswegen
sind die nicht unifizierbar ist nicht genug,

0:00:53.940,0:01:01.920
aber was die richtigen Erklärungen sind, werden
wir gleich sehen. Also angefangen mit dem ersten

0:01:01.920,0:01:12.120
Paar, da haben wir die Terme 'g(s(s(A)), s(B),B)'
und 'g(C,C,s(D))'. Normalerweise wollen wir von

0:01:12.120,0:01:17.940
links nach rechts das ganze evaluieren, denn so
operiert Prolog. Also wir schauen uns den ersten

0:01:17.940,0:01:22.740
Parameter auf beiden Seiten an, versuchen dafür
eine Substitution zu finden, damit die gleich sind

0:01:22.740,0:01:30.210
und gehen dann zum zweiten weiter usw. Und wenn
wir Prolog hier ein wenig emulieren wollen, machen

0:01:30.210,0:01:35.070
wir das hier genau so. Also der erste Parameter
ist 's(s(A))' auf der einen Seite und 'C' auf

0:01:35.070,0:01:41.970
der anderen Seite. Hier könnte man jetzt naiv
sagen: Dann substituieren wir doch alle unsere

0:01:41.970,0:01:49.080
's(s(A))' zu 'C'. Also wenn wir das hier kopieren
und anwenden, dann würden wir praktisch das hier

0:01:49.080,0:01:54.600
machen. Das ist aber nicht erlaubt, denn
wir dürfen nur Substitutionen für Variablen

0:01:54.600,0:02:00.450
machen und sonst nichts. Dieses 's(s(A))', diese
Struktur hier, können wir aber nicht verändern,

0:02:00.450,0:02:04.740
wir könnten nur eine Substitution für 'A' machen.
Zu dem Zeitpunkt ist das aber nicht wirklich

0:02:04.740,0:02:10.020
sinnvoll. Das hier ist aber nicht komplett
verloren, denn wir haben auf der anderen Seite

0:02:10.020,0:02:16.170
nur eine einzelne Variable. Also können wir das
einfach umdrehen und sagen: Wir substituieren alle

0:02:16.170,0:02:23.520
unsere 'C' zu 's(s(A))'. Wenn wir das anwenden
für alle 'C' in unseren Termen, dann bekommen

0:02:23.520,0:02:28.530
wir diese beiden Terme und die ersten Parameter
sind identisch und das ist genau das, was wir

0:02:28.530,0:02:33.900
wollten. Also können wir zum zweiten Parameter
weitergehen. Auf der einen Seite ist das 's(B)'

0:02:33.900,0:02:40.710
und auf der anderen Seite ist das jetzt 's(s(A))'.
Dieses erste s ist auf beiden Seiten identisch,

0:02:40.710,0:02:43.230
also können wir da hereingehen. Auf der einen
Seite haben wir dann 'B' und auf der anderen

0:02:43.230,0:02:50.100
Seite die Struktur 's(A)'. Auch hier können
wir diese Struktur 's(A)' nicht verändern,

0:02:50.100,0:02:53.970
nur die Variable 'A' da drinnen. Das heißt, die
einzige Substitution, die wir hier machen können

0:02:53.970,0:03:01.860
ist: 'B' zu 's(A)'. Das angewandt auf alle
'B', dann bekommen wir diese beiden Terme.

0:03:01.860,0:03:07.590
Die ersten beiden Parameter sind identisch und
wir haben noch den dritten. Auf der einen Seite

0:03:07.590,0:03:13.230
ist das 's(A)' und auf der anderen Seite
's(D)'. Hier haben wir auch wieder das s,

0:03:13.230,0:03:17.670
da können wir hineingehen. Auf der ersten Seite
haben wir dann die Variable 'A' und auf der

0:03:17.670,0:03:22.830
zweiten Seite die Variable 'D'. Dann können wir
uns jetzt entscheiden, substituieren wir alle

0:03:22.830,0:03:30.900
'A' zu 'D' oder alle 'D' zu 'A'. Das sind beides
zwei äquivalente Substitutionen, die beide zu zwei

0:03:30.900,0:03:40.770
identischen Termen führen, also unifizierten
Termen. Bleiben wir mal bei 'A' zu 'D'. Dann

0:03:40.770,0:03:46.950
müssen wir das hier alles machen, also alle
'A' zu 'D' austauschen, um unsere identischen

0:03:46.950,0:03:54.720
Terme zu kriegen. Damit hätten wir hier einen
unifier. Was aber immer wichtig ist, deswegen

0:03:54.720,0:04:00.360
habe ich das auch hier 'A' zu 'D' gelassen, ist zu
schauen, sobald wir einen unifier gefunden haben,

0:04:00.360,0:04:05.190
können wir irgendwelche Substitutionen, die
wir gemacht haben, auf andere Substitutionen

0:04:05.190,0:04:11.100
in unserem unifier anwenden. In diesem Fall haben
wir hier 'A' benutzt, aber hier substituieren

0:04:11.100,0:04:16.320
wir was für 'A' rein. Also können wir diese
Substitution direkt anwenden und diese 'A' zu 'D'

0:04:16.320,0:04:21.900
ändern, womit wir uns den letzten Schritt, wo wir
alle 'A' zu 'D' wechseln mussten, sparen, weil wir

0:04:21.900,0:04:27.840
das direkt gemacht haben. Das ist der most general
unifier, den wir hier haben wollen. Das ist auch

0:04:27.840,0:04:33.990
ein most general unifier, denn ein most general
unifier ist einfach nur ein unifier, der so viele

0:04:33.990,0:04:40.740
Variablen wie möglich beibehält. In dem Fall
haben wir leider nur eine Variable beibehalten.

0:04:40.740,0:04:46.200
Was anderes wäre nicht möglich gewesen. Das ist
immer noch ein most general unifier, denn wir

0:04:46.200,0:04:50.490
haben keine sinnlosen Substitutionen gemacht,
wie zum Beispiel alle 'D' zu einer Konstanten

0:04:50.490,0:04:56.220
zu wechseln. Das wäre eine Substitution, die
man, wenn möglich, vermeiden sollten, weil es

0:04:56.220,0:04:59.880
nicht mehr zu einem most general unifier
führt. Dann nehmen wir das wieder weg,

0:05:00.900,0:05:08.160
entfernen das und belassen es bei unserem most
general unifier. Weiter mit (b). Da haben wir

0:05:08.160,0:05:17.670
zwei Terme f. Den einen mit 'X,s(X),a' und den
anderen mit 's(0),s(s(Y)),Y'. Auch wieder von

0:05:17.670,0:05:22.230
links nach rechts. Die ersten Parameter sind 'X'
und 's(0)'. An diesem 's(0)' können wir nichts

0:05:22.230,0:05:28.320
machen. Das heißt, die einzige Substitution,
die wir machen können, ist 'X' zu 's(0)'. Wenn

0:05:28.320,0:05:36.930
wir das auch anwenden für alle 'X', bekommen wir
diese beiden Terme, die beiden Parameter sind nun

0:05:36.930,0:05:41.970
identisch und für den zweiten Parameter haben wir
jetzt 's(s(0))', wo wir nichts dran machen können,

0:05:41.970,0:05:50.370
und hier 's(s(Y))'. Also hier ist nur dieses 'Y'
und '0', wo wir eine Substitution machen können.

0:05:50.370,0:05:56.070
Also 'Y' zu '0'. Wenn wir das jetzt anwenden,
sehen wir, dass wir hier ein Problem haben,

0:05:56.070,0:06:00.180
denn wenn wir das machen, haben wir
die ersten zwei Parameter identisch,

0:06:00.180,0:06:05.670
aber der dritte Parameter ist hier 'a' und hier
einmal '0'. Das heißt, diese beiden sind nicht

0:06:05.670,0:06:10.920
identisch, wir haben keine Variablen mehr, für
die wir Substitutionen machen könnten. Das ist

0:06:10.920,0:06:17.100
ein unvollständiger unifier und somit sind die
beiden Terme nicht unifizierbar. Das einfach

0:06:17.100,0:06:21.000
jetzt stehen lassen, wie ich anfangs gesagt habe,
ist nicht genug, wir müssen noch kurz erklären,

0:06:21.000,0:06:28.530
warum das der Fall ist. Dafür können wir einfach
einen kleinen Schritt zurückgehen und uns mal

0:06:28.530,0:06:32.775
angucken, was denn der eigentliche Konflikt ist
und wir sehen schon sofort, wenn wir nur einen

0:06:32.775,0:06:37.470
Schritt zurück machen, hier haben wir zwar
die '0' substituiert für 'Y', aber hier haben

0:06:37.470,0:06:42.670
wir ein 'Y' und die Konstante 'a'. Das heißt,
die andere Substitution, die wir machen müssten,

0:06:42.670,0:06:48.670
wäre 'Y' zu 'a'. Das wären zwei Substitutionen
für 'Y'. Man kann nicht zwei Substitutionen

0:06:48.670,0:06:53.320
für dieselbe Variable in einem unifier haben.
Das heißt, wir haben diesen Konflikt zwischen

0:06:53.320,0:06:58.420
diesen beiden Substitutionen und das können wir
auch so aufschreiben. Wenn wir das jetzt hier

0:06:58.420,0:07:11.920
alles mal wegnehmen, dann können wir aufschreiben:
Nicht unifizierbar, da es zwei konkurrierende

0:07:11.920,0:07:35.680
Substitutionen für 'Y' gibt. 'Y/0' und 'Y/a'.
Und da nicht beide angewandt werden können,

0:07:35.680,0:07:48.370
haben wir einen Konflikt. Das wäre eine
akzeptable Erklärung. Also können wir zu

0:07:48.370,0:07:55.120
(c) weitergehen. Bei (c) haben wir zwei Terme c.
Einen mit diesem ganzen Parameter, hier muss man

0:07:55.120,0:08:01.030
mit der Klammerung ein bisschen aufpassen, das ist
alles ein Parameter, das ist der zweite, c hat nur

0:08:01.030,0:08:08.410
zwei Parameter hier. Auf der anderen Seite ist das
dieses 'c(D,a)' und 'E'. Arbeiten wir von links

0:08:08.410,0:08:14.140
nach rechts. Dieses c ist auf beiden Seiten. Da
können wir einfach reinspringen und uns den ersten

0:08:14.140,0:08:23.220
Teil angucken. Der ist hier 'b(A,B)' und da 'D'.
Das heißt, die einzige Substitution, die wir da

0:08:23.220,0:08:27.610
machen können ist 'D' zu 'b(A,B)'. Wir haben noch
hier ein 's(B)' und hier eine Konstante 'a'. Mit

0:08:27.610,0:08:32.350
der haben wir wieder sofort ein Problem, denn
an der Konstante 'a' können wir nichts machen

0:08:32.350,0:08:36.760
und an 's(B)' können wir auch nichts machen,
wir könnten nur an dem B selber was machen. Das

0:08:37.270,0:08:42.010
hilft uns aber nichts, denn es gibt hier keine
Substitution, die diese beiden identisch machen

0:08:42.010,0:08:48.250
würden. Das heißt, wir haben sofort einen Konflikt
hier, können unseren unvollständigen unifier

0:08:48.250,0:09:03.671
wegnehmen und sagen: Nicht unifizierbar, da 's(B)'
nicht mit 'a' unifizierbar ist. Oder umgekehrt,

0:09:03.671,0:09:07.430
'a' ist nicht mit 's(B)' unifizierbar. Das ist
egal wie rum. Einfach nur darauf hingewiesen,

0:09:07.430,0:09:12.500
dass dieses 's(B)' und dieses 'a' im Konflikt
stehen und es dafür keine Substitution gibt,

0:09:12.500,0:09:20.720
um die gleichzusetzen. Das wäre auch schon
(c). Bei (d) haben wir wieder die Terme c,

0:09:20.720,0:09:27.920
auch wieder nur mit zwei Parametern. Einmal mit
der Variable 'A' und diesem ganzen für die zweiten

0:09:27.920,0:09:35.210
Parameter und einmal die Konstante 'a' hier und
diesem Ausdruck als zweiten Parameter. Zu Anfang

0:09:35.210,0:09:41.150
haben wir hier eine Variable und eine Konstante,
also ist das eine einfache Substitution und die

0:09:41.150,0:09:50.750
angewandt gibt uns diese beiden Terme und
wir sehen, dass hier keine Variablen mehr

0:09:50.750,0:09:58.580
drin sind und hier haben wir nur noch 'B', 'C'
und 'D' drin. Der Rest dieser Struktur, also

0:09:58.580,0:10:04.640
dieses 'c(c(...))' ist auf beiden Seiten gleich.
Das heißt, wir können einfach nur reinspringen

0:10:04.640,0:10:09.320
und uns einfach nur diese Unterschiede zwischen
den Konstanten und den Variablen hier anschauen und

0:10:09.320,0:10:14.750
dafür genauso einfache Substitutionen machen,
wie für die ersten. Hier haben wir die Variable

0:10:14.750,0:10:21.344
'B' und da die Konstante 'a', hier haben wir die
Variable 'C' und die Konstante 'b' und hier die

0:10:21.344,0:10:25.940
Variable 'D' und die Konstante 'c'. Also können
wir die auch einfach so runterschreiben. 'B' zu

0:10:25.940,0:10:33.830
Konstante 'a', 'C' zu Konstante 'b' und 'D'
zu Konstante 'c'. Das auch dann angewandt

0:10:33.830,0:10:40.040
gibt uns dann diese beiden Terme, in denen
wir jetzt keine Variablen mehr haben,

0:10:40.040,0:10:44.900
aber die Terme sind identisch. Das heißt, dass
das unifizierbar ist und das ist ein unifier.

0:10:44.900,0:10:51.110
Hier könnte man jetzt fragen: Ist das noch
ein most general unifier? Denn wir haben keine

0:10:51.110,0:10:54.410
Variablen mehr und wir sollten ja eigentlich
so viele Variablen wie möglich beibehalten.

0:10:55.100,0:11:00.500
Allerdings hätten wir auch hier keine anderen
Möglichkeiten gehabt Substitutionen zu machen.

0:11:00.500,0:11:05.660
Das heißt, obwohl wir hier keine Variablen mehr
haben, ist das immer noch ein most general unifier

0:11:05.660,0:11:18.740
und die Lösung für Aufgabe (d). Bei (e) haben
wir zwei Terme p. Einen mit 's(A),h(B,C),C'

0:11:18.740,0:11:23.690
und den anderen mit 'D,h(D,E),2'. Die erste
Substitution ist wieder relativ einfach,

0:11:23.690,0:11:28.070
denn hier haben wir eine Variable und hier
haben wir die Struktur 's(A)'. Das heißt,

0:11:28.070,0:11:34.880
wir können nur 'D' zu 's(A)' machen und
wenn wir das dann auch anwenden, bekommen

0:11:34.880,0:11:42.980
wir diese beiden Terme. Die ersten Parameter
sind auf beiden Seiten jetzt identisch und

0:11:42.980,0:11:48.710
wir können zum zweiten weitergehen. Beim zweiten
haben wir diese h auf beiden Seiten. Das heißt,

0:11:48.710,0:11:53.030
wir können da reinspringen und uns den ersten Teil
davon angucken. Auf der einen Seite haben wir hier

0:11:53.030,0:12:00.200
die Variable 'B' und hier 's(A)'. Das ist genauso
wieder eine simple Substitution: 'B' zu 's(A)'.

0:12:00.200,0:12:08.540
Das angewandt gibt uns dann das hier. Der erste
Teil vom zweiten Parameter ist jetzt identisch,

0:12:08.540,0:12:14.300
's(A)' ist auf beiden Seiten und wir haben noch
die Variable 'C' und die Variable 'E' hier. Hier

0:12:14.300,0:12:21.020
können wir uns auch wieder entscheiden. Entweder
wir machen 'E' zu 'C' oder 'C' zu 'E'. Das sind

0:12:21.020,0:12:26.960
beides zwei äquivalente Substitutionen, die hier
erlaubt sind. Bleiben wir mal bei 'C' zu 'E'. Dann

0:12:26.960,0:12:31.550
würden wir das hier machen, also alle 'C' zu
'E' wechseln. Damit haben wir dann den zweiten

0:12:31.550,0:12:38.930
Parameter identisch und hier ein 'E' haben und die
Konstante '2', haben wir auch wieder eine simple

0:12:38.930,0:12:51.050
Substitution: 'E' zu '2'. Das auch angewandt gibt
uns das hier. Das sind jetzt zwei äquivalente

0:12:51.050,0:12:57.320
Terme. Das heißt, die sind unifizierbar und das
ist ein unifier dafür. Hier müssen wir aber auch

0:12:57.320,0:13:00.560
wieder aufpassen, genau dasselbe machen, wie
wir es auch für (a) gemacht haben, was wir auch

0:13:00.560,0:13:07.970
bei allen anderen machen sollten, wo das auffällt,
ist: Haben wir Substitutionen, die wir auf andere

0:13:07.970,0:13:14.270
Substitutionen anwenden können? In diesem Fall
haben wir hier 'E' benutzt, bei der Substitution

0:13:14.270,0:13:19.370
für 'C' und 'E' substituieren wir auch mit '2'.
Das heißt, das können wir auch direkt anwenden und

0:13:19.370,0:13:27.260
'C' zu '2' machen, womit wir uns dann den letzten
Schritt sparen, wo wir die anderen 'E', außer das

0:13:27.260,0:13:33.320
letzte zu '2' wechseln mussten, weil das haben
wir ja schon vorher gemacht. Das heißt, das können

0:13:33.320,0:13:38.120
wir auch wieder wegmachen und das ist der most
general unifier, den wir für (e) haben wollen.

0:13:38.120,0:13:48.260
Zuletzt haben wir noch (f) mit den zwei Termen
r, einmal mit 'A,A' und einmal mit 's(B,C)' und

0:13:48.260,0:13:51.440
diesen ganzen Ausdruck als zweiten Parameter.
Da müssen wir auch wieder mit der Klammerung

0:13:51.440,0:14:03.536
aufpassen. Für den ersten haben wir hier die
Variable 'A' und hier dieses 's(B,C)'. Das heißt,

0:14:03.536,0:14:05.840
die einzige Substitution, die wir machen können,
ist 'A' zu 's(B,C)'. Wenn wir das auch anwenden,

0:14:05.840,0:14:17.120
bekommen wir diese beiden Terme, wo der erste
Parameter auf beiden Seiten identisch ist und

0:14:17.120,0:14:25.010
bei dem zweiten ist das jetzt 's(B,C)' und hier
's(s(D,1),1)'. Dieses s ist auf beiden Seiten da,

0:14:25.010,0:14:28.400
das heißt, dass wir da reinspringen und uns den
ersten Teil angucken. Hier ist eine Variable

0:14:28.400,0:14:38.120
'B' und hier ist es 's(D,1)'. Also auch wieder
eine ähnliche Substitution: 'B' zu 's(D,1)'.

0:14:38.120,0:14:43.280
Und das auch angewandt. Hier müssen wir jetzt
aufpassen, denn wir haben dieselbe Variable

0:14:43.280,0:14:49.415
bei beiden Termen und die müssen wir natürlich
alle substituieren. Also wird das gemacht, dann

0:14:49.415,0:14:54.350
bekommen wir diese beiden Terme. Obwohl wir jetzt
wieder Substitutionen für den ersten Parameter

0:14:54.350,0:15:00.470
gemacht haben, sind die beiden immer noch
identisch, was natürlich so sein sollte. Für den

0:15:00.470,0:15:07.350
zweiten Parameter haben wir jetzt 's(s(D,1),...)'
und dann noch 'C' auf der einen Seite,

0:15:07.350,0:15:13.470
'1' auf der anderen Seite. Damit haben wir die
simple Substitution 'C' zu '1', womit wir dann,

0:15:13.470,0:15:20.640
angewandt auf alle 'C', diese beiden Terme
kriegen, die jetzt identisch sind, womit das

0:15:20.640,0:15:26.280
ein unifier ist und die Terme unifizierbar
sind. Auch hier wieder schauen: Können wir

0:15:26.820,0:15:32.910
Substitutionen auf andere Substitutionen anwenden?
In dem Fall haben wir hier 'C' benutzt und hier

0:15:32.910,0:15:36.090
haben wir ein Substitution für 'C' gemacht,
also können wir das auch hier direkt machen.

0:15:36.090,0:15:43.792
Aber wir haben hier auch noch 'B' benutzt und
hier eine Substitution für 'B' gemacht und das

0:15:43.792,0:15:46.650
sollten wir auch noch direkt anwenden, womit wir
dann diesen unifier kriegen, der uns ein paar

0:15:46.650,0:15:53.160
Schritte spart und die Lösung für die Teilaufgabe
(f) und die Lösung für die ganze Aufgabe ist.
