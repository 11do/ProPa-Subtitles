0:00:01.280,0:00:06.000
This task is about immediate
consequence operator tp.

0:00:10.160,0:00:17.200
Our task is to compute the first three
iterations of tp starting with the empty set.

0:00:19.040,0:00:29.120
We start with the empty set as the
Herbrand interpretation as argument for tp.

0:00:31.120,0:00:47.680
We write tp of the empty set equals and then we
write to set that this iteration consists of.

0:00:52.400,0:01:04.320
For this first set we have to consider
only the facts of our prolog program.

0:01:09.920,0:01:16.000
In contrast to the example in the lecture for tp

0:01:16.720,0:01:21.040
in this case we do not have
any variables in our facts.

0:01:21.920,0:01:25.840
Our facts are just without variables.

0:01:26.400,0:01:34.160
We can just simply include
all the facts in this set.

0:01:41.280,0:01:46.880
We have ingredient(salad)
in our set and all the other

0:01:46.880,0:01:49.280
ingredients so: ingredient(salami),
ingredient(carrot), ingredient(steak).

0:02:03.360,0:02:12.480
So it's all all the predicates for ingredients
that are part of the tp of the empty set.

0:02:22.160,0:02:29.040
And beside the ingredients
there are also the veggies.

0:02:30.960,0:02:38.400
Those are just the two: salad
and carrot; and the predicate

0:02:40.320,0:02:47.440
carbs – there's just a single one –
so only fries is a carb in this case.

0:02:50.160,0:02:56.640
Finally there's the predicate compose
where we have fries and steak as fact.

0:02:57.600,0:03:04.080
So compose(fries, steak) as a fact
so this is part of tp as well.

0:03:05.920,0:03:15.040
As I said before, this is a set, so we need to
separate all the members of the set by comma,

0:03:16.800,0:03:17.840
okay?

0:03:20.960,0:03:25.520
This is the first iteration of tp.

0:03:27.200,0:03:33.520
There are no further elements within
tp because there are no more facts left

0:03:34.720,0:03:39.600
and there are no variables
within our effects, okay?

0:03:39.600,0:03:45.840
We continue with the second iteration
which is tp of tp of the empty set.

0:03:47.760,0:03:52.880
This one contains a tp of the empty set.

0:03:58.880,0:04:04.480
This is part of the set but
there are also more members and

0:04:05.280,0:04:11.680
so we can unify tp and the empty set
with those members that are left.

0:04:16.320,0:04:18.080
Now we consider the rules.

0:04:19.680,0:04:37.920
We consider all the rules but only those
where on the right hand side, beginning with

0:04:37.920,0:04:44.720
the implication arrow, there are predicates
which are in tp of the empty set already.

0:04:46.080,0:04:57.040
That's why we can consider all the veggie
ingredients parts and carbs, but we can not

0:04:57.040,0:05:05.920
apply this sidedish because we don't have a
sidedish within our tp of the empty set yet.

0:05:07.440,0:05:11.840
So in our previous iteration there is no sidedish

0:05:11.840,0:05:17.520
that's why we can only consider
compose and not sidedish.

0:05:20.400,0:05:27.440
For compose we have to consider
x and y and x and y are

0:05:27.440,0:05:31.200
a veggie of x and ingredient of y in this case.

0:05:32.000,0:05:46.720
So everything we find that is requiring a veggie
and an ingredient we can add it to compose, okay?

0:05:46.720,0:05:51.840
We can compose every veggie with every ingredient.

0:05:53.840,0:05:56.800
So we can say compose

0:06:02.240,0:06:14.320
of salad and carrot for instance.

0:06:14.320,0:06:17.280
Because carrot is an ingredient, right?

0:06:19.360,0:06:30.640
Furthermore we can combine it with every
other ingredient as well right away.

0:06:31.680,0:06:34.480
So this is one member of the set.

0:06:34.480,0:06:45.680
We can compose salad also with salami.

0:06:46.560,0:07:00.960
Salami is is like a pepperoni on a pepperoni pizza
- so it's some german version of a meat product.

0:07:00.960,0:07:08.000
(add space some space here)

0:07:09.520,0:07:24.640
We can compose salad with
carrot, with salami, with salad.

0:07:26.080,0:07:34.480
We can compose salad with steak and
we can compose salad with fries.

0:07:40.080,0:07:49.280
This is the first part, which
is a veggie and an ingredient.

0:07:49.280,0:07:53.120
But there's another veggie as
well and this one is carrot.

0:07:53.120,0:07:55.840
– We can use all the things we had here –

0:07:55.840,0:08:00.880
With carrot as well so you could simply

0:08:02.800,0:08:10.240
copy this part here and replace
all these salads with carrot.

0:08:17.200,0:08:23.760
Just as a side note: it's perfectly
fine to combine carrot with carrot

0:08:23.760,0:08:28.160
and it's also perfectly fine
to combine salad with salad.

0:08:28.800,0:08:31.840
That's just how these these predicates work.

0:08:38.400,0:08:41.920
Then there's no veggie left.

0:08:41.920,0:08:44.880
We have all the veggies combined
with all the ingredients.

0:08:46.080,0:08:50.640
This is the cross product
of veggie and ingredient.

0:08:51.360,0:08:54.880
Now we have the compose left for carbs.

0:08:58.080,0:09:05.520
Now we have to apply the compose
with carbs and every ingredient.

0:09:06.080,0:09:18.720
Again we can copy this stuff here and this
time we have, as I said, the carbs to choose.

0:09:18.720,0:09:20.480
And carbs is just fries.

0:09:21.120,0:09:24.320
We can combine it with every ingredient again.

0:09:25.200,0:09:31.760
But this is not completely true
because there's one ingredient

0:09:32.400,0:09:35.360
or one combination that's mentioned already here.

0:09:35.360,0:09:43.040
So fries is already combined with steak so
we do not enter this one here because it

0:09:43.040,0:09:51.360
would be a duplicate and as we
have a set there are no duplicates.

0:09:56.320,0:10:00.560
This is our set for the second iteration.

0:10:05.040,0:10:07.520
Why is there no side dish here?

0:10:07.520,0:10:11.120
Because we could compose a compose

0:10:11.760,0:10:18.320
with a veggie and a carb here and then
we would have a side dish as well, okay?

0:10:18.320,0:10:25.120
But in this case we would have required
the second component a veggie or a carb.

0:10:25.120,0:10:31.040
But if we have a look here
- in these um composes here

0:10:31.680,0:10:35.120
that we have in the previous
step - it's only fries and steak.

0:10:35.680,0:10:42.480
There is no predicate veggie for steak and there
is neither a predicate for carbs for steak.

0:10:44.320,0:10:45.680
None of them is available.

0:10:45.680,0:10:53.760
So we can't add the predicate sidedish
with any parameter in this step here.

0:10:58.800,0:11:06.400
And just to further highlight this.

0:11:07.120,0:11:20.880
I just want to show for some examples that we
created by choosing parts of the first iteration.

0:11:22.800,0:11:27.840
I said that we had first a look at the compose.

0:11:28.640,0:11:32.240
So it's this compose here.

0:11:32.240,0:11:35.600
This requires a veggie and an ingredient.

0:11:35.600,0:11:44.400
We could choose any veggie – for instance salad
– and any ingredient – for instance carrot.

0:11:45.440,0:11:50.240
When we combine them then this
is this part for instance, right?

0:11:50.880,0:11:59.760
We could combine those two from the previous
step in order to get this new entry here.

0:12:00.640,0:12:21.040
And we have combined salad also with salami,
with steak that's this one, with salad

0:12:22.640,0:12:29.920
well, and carrot – I mentioned already, and fries.

0:12:32.000,0:12:36.320
We combined it always with those parts here.

0:12:37.920,0:12:48.000
Every combination is possible here in this
case, because it's exactly the predicates

0:12:48.800,0:12:50.720
that we match here on the right hand side.

0:12:58.000,0:13:05.840
Now we continue with the next iteration of tp.

0:13:08.080,0:13:12.880
Right here let's go a bit down
to make more space for this.

0:13:14.960,0:13:24.240
This is the next iteration of tp and
this is tp of tp of tp of the empty set.

0:13:27.600,0:13:33.680
For this iteration again: it
consists of the previous step.

0:13:34.880,0:13:53.120
It's tp of tp of the empty set unified
with the new members of this set now.

0:13:56.720,0:14:05.440
Just as a side note as tp of tp of
the empty set is member of this set,

0:14:06.320,0:14:13.520
tp of the empty set is also a member because this
is also a member of the previous step, right?

0:14:13.520,0:14:17.280
So all the previous steps are members.

0:14:40.240,0:14:49.360
This is the second step now when we combine
or take the other rules into account.

0:14:51.120,0:14:58.320
We do not have to look at the compose anymore
because we've got already all composes within

0:14:59.360,0:15:04.240
either tp of tp of the empty
set or tp of the empty set.

0:15:16.320,0:15:33.760
Now we can continue by looking for predicates
that are applicable or rules that are applicable.

0:15:34.320,0:15:38.640
fullmeal is not applicable
because we have no sidedish yet.

0:15:38.640,0:15:46.160
But sidedish is applicable because we have
composes and we have veggies and carbs.

0:15:46.960,0:15:51.440
veggies and carbs are in tp of
the empty set and composes are

0:15:51.440,0:15:54.880
in both tp of the empty set
and tp of tp of the empty set.

0:16:01.120,0:16:08.720
Now we can create sidedishes
by composing a compose.

0:16:11.760,0:16:18.480
This is a carrot, salad, and fries
combined with a veggie (or a carb)

0:16:19.760,0:16:21.680
Let's consider this rule first.

0:16:21.680,0:16:29.360
We compose any of these –
salad, carrot, and fries.

0:16:29.360,0:16:34.560
So we have all combinations for
salad, carrot, and fries with veggie.

0:16:37.040,0:16:38.240
Let's start with salad.

0:16:42.960,0:16:54.400
Now we can choose any veggie.
Veggies are salad and carrot..

0:16:56.480,0:17:04.400
So we can add the sidedish
that is salad and salad.

0:17:06.320,0:17:12.000
We can have a sidedish hat

0:17:17.680,0:17:23.360
is salad combined with carrot,
because this is also a veggie.

0:17:25.120,0:17:27.840
And then we have this other rule here.

0:17:28.960,0:17:32.000
These were all the veggies
but we have this other rule

0:17:32.000,0:17:36.160
to combine a sidedish with
a carb and this is fries.

0:17:36.160,0:17:36.720
So we can

0:17:43.440,0:17:45.840
combine this also with fries.

0:17:47.520,0:17:50.400
salad and fries is also a sidedish.

0:17:56.640,0:18:00.000
I think I continue a bit further on the left

0:18:00.000,0:18:03.440
just in order to use a bit more
of the space available here.

0:18:07.040,0:18:16.160
Now we had the salad already, so we can
choose composes with carrot and with fries.

0:18:16.160,0:18:18.480
Let's continue with the carrots

0:18:21.600,0:18:27.520
A side dish of carrot and –

0:18:27.520,0:18:32.480
Again we can only choose veggies
and carbs for the second component.

0:18:32.480,0:18:36.080
So steak and salami are no options.

0:18:36.080,0:18:39.120
But we can choose carrot, salad and fries.

0:18:39.120,0:18:44.480
Because carrot, salad and fries
happen to be either veggies or carbs.

0:18:44.480,0:18:47.840
So either they apply for this rule or that rule.

0:18:50.000,0:18:58.720
It's carrot and salad is a
sidedish, also carrot and

0:19:03.600,0:19:09.840
carrot, and a sidedish is carrot and fries.

0:19:15.920,0:19:23.280
And once more we can apply the whole thing.

0:19:27.600,0:19:34.400
First we can use the sidedish
rule again for the fries part.

0:19:34.400,0:19:41.120
So we have composes with fries
and every other ingredient.

0:19:42.640,0:19:53.240
So we can say a sidedish of fries and
– again we have to consider the rules.

0:19:53.240,0:19:59.120
The rules just say a sidedish is
if it is a compose and veggie.

0:20:04.480,0:20:09.120
There are all combinations of compose
with fries as the first component.

0:20:09.120,0:20:14.880
But only carrot, salad, and
fries are either veggie or carbs.

0:20:16.160,0:20:18.560
Salami is neither of them.

0:20:19.360,0:20:37.680
Again we have the combination fries and salad,
sidedish fries and carrot, and finally sidedish

0:20:41.040,0:20:42.720
fries and fries.

0:20:48.160,0:20:54.720
That's the third iteration.

0:20:55.760,0:21:01.840
Now we come to the fourth
iteration of tp of tp and so on

0:21:04.320,0:21:15.840
So this is tp of tp of tp of tp of the

0:21:23.040,0:21:23.760
empty set.

0:21:35.680,0:21:36.480
(bracket here)

0:21:42.000,0:21:48.400
As before it consists of tp
of tp of tp of the empty set

0:21:52.320,0:21:56.400
combined with all the members
of this iteration on it.

0:21:57.520,0:22:02.160
So we have the first tp of the empty set, we have

0:22:05.520,0:22:15.680
tp of tp of the empty set, and we have tp of tp
of tp of the empty set – that's the previous step.

0:22:15.680,0:22:19.520
And now it is – well it's actually actually

0:22:19.520,0:22:27.200
fourth iteration now, but still
let's let's finish it here.

0:22:43.520,0:22:54.960
We have this fourth iteration because
we don't have applied all rules yet.

0:22:56.240,0:23:01.840
For the actual task it would be
enough to end with this iteration

0:23:02.480,0:23:09.280
but as there are still steps left we can
continue with the fourth iteration here.

0:23:14.560,0:23:16.320
The rule that's missing is fullmeal.

0:23:16.320,0:23:24.720
A fullmeal consists of sidedish(x,
y) with sidedish(y, z).

0:23:26.880,0:23:40.000
So a fullmeal has to be a sidedish where the
second component of a sidedish is also part of a

0:23:40.720,0:23:46.160
first component of a sidedish.

0:23:46.160,0:23:57.120
We can create all the combinations that
are possible for this fullmeal definition.

0:23:59.200,0:24:10.000
A full meal consists of a sidedish and a sidedish.

0:24:12.160,0:24:19.200
As sidedishes are only in this iteration
because here in these iterations there is no

0:24:19.200,0:24:22.480
side dish so we can just have
a look at these ones here.

0:24:23.840,0:24:35.440
And we have fullmeals for sidedishes that
contain the first part and a component being the

0:24:39.840,0:24:44.640
second second part and also
as first part of a sidedish.

0:24:44.640,0:24:51.680
So a valid combination would be:
sidedish(salad, salad) and sidedish(salad,

0:24:51.680,0:25:01.120
salad) which would result in the
fullmeal(salad, salad, salad), right?

0:25:01.120,0:25:05.280
Because if we apply this here to this rule – x and

0:25:05.280,0:25:15.840
y is salad and salad – and y and z is salad
and salad then x, y, z is salad, salad, salad.

0:25:21.280,0:25:31.680
We can continue by using this sidedish here
as the first component – so salad and salad –

0:25:31.680,0:25:40.000
and combine it with all the other parts which are
also valid predicates here for the second part.

0:25:40.880,0:25:48.720
So salad and salad is the first
first part for x and y and then we

0:25:48.720,0:25:54.160
can combine it with salad and carrot
because the first component is salad

0:25:54.160,0:25:58.560
and the second component is carrot
– so it's a valid option here.

0:26:02.160,0:26:07.360
We can continue the whole thing, i think.

0:26:07.360,0:26:23.840
fullmeal is also salad, and salad, and fries
which is the last available option here.

0:26:24.480,0:26:29.440
We can check if there is another option
where salad is the first component.

0:26:29.440,0:26:33.600
But if you have a look here we see there
is no other option – so these are the

0:26:34.160,0:26:45.040
only valid options for salad and
salad as the first two components.

0:26:46.080,0:26:54.720
We can continue the same with
salad and something else.

0:26:56.560,0:27:05.920
We can say: a full meal is something which is
of salad and carrot which is our second option.

0:27:05.920,0:27:17.440
We can just continue by choosing the next option
which is a good way of continuing the whole thing.

0:27:17.440,0:27:27.280
Now we have a salad and carrot set
for x and y so y has to be carrot

0:27:28.160,0:27:32.960
and now we can choose all these sidedishes
with carrot which are these three.

0:27:33.760,0:27:44.800
We can combine all the options so we have fullmeal
for salad, carrot, and salad as well as for

0:27:44.800,0:28:00.480
salad, carrot, and carrot and
also for salad, carrot, and fries.

0:28:05.520,0:28:10.560
We can continue with the fullmeal further.

0:28:10.560,0:28:16.000
There's no other option for carrot
here so carrot is already done.

0:28:16.000,0:28:19.600
We can now continue with salad and fries.

0:28:28.320,0:28:34.880
When salad and fries is set – salad
is set for x and fries is set for y

0:28:34.880,0:28:42.400
so z has to be something where
the first component is fries.

0:28:42.400,0:28:46.720
So any of these and those are again salad,

0:28:51.120,0:28:54.160
carrot, and fries.

0:28:55.600,0:29:03.920
It's salad, fries, and salad;
salad, fries, and carrot; and salad,

0:29:08.160,0:29:11.840
fries, and fries.

0:29:15.840,0:29:22.480
These are the first options.

0:29:23.200,0:29:32.800
We can continue the whole thing for
the next part, that is for all the

0:29:32.800,0:29:41.280
things that are sidedishes starting with
carrot and then also the ones with fries.

0:29:41.280,0:29:46.400
If we do this then we can continue here.

0:29:48.480,0:29:57.120
Like combining carrot with
salad which is the first option.

0:29:57.920,0:30:00.720
Then we can choose salad again.

0:30:01.520,0:30:07.840
We can choose for carrot, salad,
carrot; and we can choose for carrot,

0:30:11.840,0:30:13.040
salad, and fries.

0:30:13.600,0:30:14.960
This is the third option.

0:30:15.760,0:30:18.240
We can continue with carrot and carrot.

0:30:20.720,0:30:27.360
This is the second option we have
here for carrot as first part.

0:30:27.360,0:30:28.960
When we choose carrot and carrot.

0:30:28.960,0:30:31.600
We can choose carrot and
salad as the first component.

0:30:31.600,0:30:35.840
We can choose carrot and
carrot as the second option.

0:30:36.720,0:30:41.200
We can choose carrot and
fries as the third option.

0:30:41.200,0:30:50.320
And we can continue with carrot and fries
as the first sidedish of the full meal.

0:30:51.040,0:30:57.520
If we do this then we have
carrot, fries and salad as option.

0:30:58.800,0:31:10.960
Because fries and salad is a valid option
for the second part as well and fries and

0:31:13.680,0:31:15.360
carrot is also an option.

0:31:19.200,0:31:24.960
If we choose carrot and fries as the
first option – as first sidedish – we can

0:31:24.960,0:31:28.560
have fries and fries as the second sidedish.

0:31:31.040,0:31:33.360
We can continue like this

0:31:35.120,0:31:46.640
very straight forward also for fries
which is the last available component.

0:31:47.360,0:31:52.240
And for fries we can apply the same stuff
so we can look in the first part here.

0:31:52.240,0:31:59.840
Of salad and salad, salad and carrots, salad and
fries – so these are these three options that are

0:32:02.880,0:32:07.520
valid combinations for the
first sidedish fries and salad.

0:32:07.520,0:32:16.400
Then for the sidedish fries and carrot again
we have all the options of those three.

0:32:17.680,0:32:30.640
The combination fries, fries
and fries which is the last one.

0:32:30.640,0:32:34.240
So we have all the fries options available.

0:32:39.200,0:32:51.760
When we are done with this, then we have the
complete set of the the fourth iteration.

0:32:52.720,0:32:59.200
And if we would continue with the next
iteration we would finally find out that

0:32:59.200,0:33:02.800
the next iteration does not add anything more.

0:33:02.800,0:33:06.080
Because there's no rule which is not applied yet.

0:33:06.080,0:33:10.640
We have applied all the rules with all
the combinations that are available.

0:33:10.640,0:33:16.480
So this is the final set of the smallest Herbrand

0:33:17.440,0:33:27.600
model that we can get by applying tp once
more or applying tp as often as required.

0:33:28.160,0:33:37.840
In this case it's four
iterations when we are done.

0:33:39.120,0:33:45.040
As i said before already, this is the first
iteration, the second iteration, third iteration.

0:33:45.040,0:33:48.720
So we would have done the task
already by finishing here.

0:33:50.240,0:33:52.640
This iteration is an additional

0:33:53.920,0:34:07.040
for completing the fourth iteration and
also completing what's the complete set.

0:34:13.200,0:34:18.560
As I said, if you would apply tp
once more you would not gain anything

0:34:18.560,0:34:30.800
else because all the rules are applied
and this is the smallest Herbrand model.
